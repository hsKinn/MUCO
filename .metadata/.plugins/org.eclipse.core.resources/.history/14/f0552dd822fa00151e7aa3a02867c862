package com.ktds.muco.table.member.web;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.ktds.muco.table.member.biz.MemberBiz;
import com.ktds.muco.table.member.vo.MemberVO;

/**
 * Servlet implementation class AdminCheckServlet
 */
public class AdminCheckServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	private MemberBiz memberBiz;
	
    /**
     * @see HttpServlet#HttpServlet()
     */
    public AdminCheckServlet() {
        super();
        memberBiz = new MemberBiz();
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.sendError(HttpServletResponse.SC_FORBIDDEN, "잘못된 요청입니다.");
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// 세션정보 받아오기
		HttpSession session = request.getSession();
		MemberVO loginMemberVO = (MemberVO) session.getAttribute("_MEMBER_");
		
		String email = request.getParameter("email");
		System.out.println("admin 체크: "+ email);
		
		boolean isAdmin;
		
		// admin만 로그인을 할 수 있게 확인, admin이 맞으면 true, 아니면 false
		// true : isAdmin=1 / false : isAdmin=0
		
		if ( memberBiz.isAdmin(email) ) {
			
		} else { 
			
		}
		
		
		if( email.equals(loginMemberVO.getName()) ) {
			isAdmin = false;
		}
		// 자신의 이름이 아닌 다른 이름을 넣었을 경우
		else {
			isAdmin = memberBiz.isExistName(email);
		}
		
		StringBuffer json = new StringBuffer();
		json.append("{");
		json.append("\"result\" : true");
		json.append(", \"isAdmin\" : " + isAdmin);
		json.append("}");
		
		PrintWriter out = response.getWriter();
		out.println(json.toString());
		out.flush();
		out.close();
	}

}
