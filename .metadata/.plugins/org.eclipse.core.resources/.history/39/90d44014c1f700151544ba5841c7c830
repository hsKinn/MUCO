package com.ktds.muco.table.placeLike.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import com.ktds.muco.table.member.dao.Const;
import com.ktds.muco.table.placeLike.vo.PlaceLikeVO;
import com.ktds.muco.util.xml.XML;

/**
 * 
 * @author 김광민
 *
 */
public class PlaceLikeDAO {
	
	
	/**
	 * selectPlaceLikeCount
	 * 
	 * @author 김동규
	 * 
	 * @param placeLikeVO
	 * @return
	 */
	public int selectPlaceLikeCount(PlaceLikeVO placeLikeVO) {
		
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_TRAVERY_USER, Const.DB_TRAVERY_PASSWORD);

			String query = XML.getNodeString("//query/placeLike/selectPlaceLikeCount/text()");
			stmt = conn.prepareStatement(query);
			stmt.setInt(1, placeLikeVO.getPlaceId());
			stmt.setString(2, placeLikeVO.getWriter().getEmail());
			
			rs = stmt.executeQuery();
			rs.next();
			
			return rs.getInt(1);
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, rs);
		}
	}
	/**
	 * insertPlaceLike
	 * 
	 * @author 김동규
	 * 
	 * @param placeLikeVO
	 * @return
	 */
	public void insertPlaceLike(PlaceLikeVO placeLikeVO) {
		
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_TRAVERY_USER, Const.DB_TRAVERY_PASSWORD);

			String query = XML.getNodeString("//query/placeLike/insertPlaceLike/text()");
			stmt = conn.prepareStatement(query);
			stmt.setInt(1, placeLikeVO.getPlaceId());
			stmt.setString(2, placeLikeVO.getWriter().getEmail());
			
			stmt.executeUpdate();
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, null);
		}
	}
	/**
	 * deletePlaceLike
	 * 
	 * @author 김동규
	 * 
	 * @param placeLikeVO
	 * @return
	 */
	public void deletePlaceLike(PlaceLikeVO placeLikeVO) {
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_TRAVERY_USER, Const.DB_TRAVERY_PASSWORD);

			String query = XML.getNodeString("//query/placeLike/deletePlaceLike/text()");
			stmt = conn.prepareStatement(query);
			stmt.setInt(1, placeLikeVO.getPlaceId());
			stmt.setString(2, placeLikeVO.getWriter().getEmail());
			
			stmt.executeUpdate();
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, null);
		}
	}
	
	public int countPlaceLike(int placeId) {
		loadOracleDriver();
		
		Connection conn = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;
		
		try {
			conn = DriverManager.getConnection(Const.DB_URL, Const.DB_TRAVERY_USER, Const.DB_TRAVERY_PASSWORD);
			
			String query = XML.getNodeString("//query/placeLike/countPlaceLike/text()");
			stmt = conn.prepareStatement(query);
			stmt.setInt(1, placeId);
			
			rs = stmt.executeQuery();
			rs.next();
			
			return rs.getInt(1);
			
		} catch (SQLException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
		finally {
			closeDB(conn, stmt, rs);
		}
	}
	
	
	/**
	 * 
	 * Load Oracle Driver
	 * 
	 * @author 김광민
	 * 
	 */
	private void loadOracleDriver() {
		try {
			Class.forName("oracle.jdbc.driver.OracleDriver");
		} catch (ClassNotFoundException e) {
			throw new RuntimeException(e.getMessage(), e);
		}
	}

	/**
	 * 
	 * Close DB
	 * 
	 * @author 김광민
	 * 
	 */
	private void closeDB(Connection conn, PreparedStatement stmt, ResultSet rs) {
		if (rs != null) {
			try {
				rs.close();
			} catch (SQLException e) {
			}
		}
		if (stmt != null) {
			try {
				stmt.close();
			} catch (SQLException e) {
			}
		}
		if (conn != null) {
			try {
				conn.close();
			} catch (SQLException e) {
			}
		}
	}
}
