<?xml version="1.0" encoding="UTF-8"?>
<query>

	<country>
		<getCountryInfoByCountryName>
			SELECT	COUNTRY_ID
					, COUNTRY_NAME
			FROM	COUNTRY
			WHERE	COUNTRY_NAME = ?
		</getCountryInfoByCountryName>
	</country>
	
	<evaluation>
		<getAvgEvaluationByPlaceId>
            SELECT	AVG(SCORE) AS SCORE
            		, STANDARD_ID
            FROM    EVALUATION
            WHERE   PLACE_ID = ?
            GROUP	BY STANDARD_ID
            ORDER	BY STANDARD_ID
		</getAvgEvaluationByPlaceId>
	</evaluation>
	
	<history>
	</history>
	
	<image>
		<insertImage>
			INSERT	INTO	IMAGE	( 
										IMAGE_ID
										, PLACE_ID
										, IMAGE_NAME
										, IMAGE_LOCATION
									)
			VALUES 					(
										IMAGE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
									)
		</insertImage>
	</image>
	
	<member>
		<addNewMember>
			INSERT INTO MEMBER (
	                      			EMAIL
	                       		 	, PASSWORD
	                       			, NAME
	                   			) 
			VALUES              ( 
	                        		?,
	                        		?,
	                        		?
	                     		)
     	</addNewMember>
     	<getMemberByIdAndPassword>
     		SELECT	*
     		FROM	MEMBER
     		WHERE	EMAIL = ?
     		AND		PASSWORD = ?
     	</getMemberByIdAndPassword>
     	<updateName>
     		UPDATE	MEMBER
     		SET		NAME = ?
     		WHERE	EMAIL = ?
     	</updateName>
     	<updatePhoneNumber>
     		UPDATE	MEMBER
     		SET		PHONE_NUMBER = ?
     		WHERE	EMAIL = ?     	
     	</updatePhoneNumber>
     	<updatePassword>
     		UPDATE	MEMBER
     		SET		PASSWORD = ?
     		WHERE	EMAIL = ?       	
     	</updatePassword>
     	<isExistName>
     		SELECT	COUNT(NAME) AS COUNT
     		FROM	MEMBER
     		WHERE	NAME = ?
     	</isExistName>
     	<addMainImage>
     		UPDATE	MEMBER 
     		SET		MAIN_IMAGE_NAME = ?
     				, MAIN_IMAGE_LOCATION = ?
     		WHERE	EMAIL = ?
     	</addMainImage>
     	<getAllMemberCount>
			SELECT	COUNT(EMAIL)
			FROM	MEMBER     	
     	</getAllMemberCount>
     	<getAllMembers>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    MEMBER
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?	     	
     	</getAllMembers>
     	<getBlockedMemberCount>
			SELECT	COUNT(EMAIL)
			FROM	BLOCKED_MEMBER   
     	</getBlockedMemberCount>
     	<getBlockedMembers>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  MEMBER.EMAIL
											, MEMBER.PASSWORD
											, MEMBER.IS_ADMIN
											, MEMBER.PHONE_NUMBER
											, MEMBER.MAIN_IMAGE_NAME
											, MEMBER.MAIN_IMAGE_LOCATION
											, MEMBER.NAME
											, MEMBER.JOIN_DT
											, MEMBER.RECENT_ACCESS_DT
									FROM    MEMBER
											, BLOCKED_MEMBER
									WHERE	MEMBER.EMAIL = BLOCKED_MEMBER.EMAIL
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?      	
     	</getBlockedMembers>
     	<getReportedMemberCount>
     		SELECT	COUNT(DISTINCT(EMAIL))
     		FROM	REPORTED_PLACE
     	</getReportedMemberCount>
     	<getReportedMembers>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  MEMBER.EMAIL
											, MEMBER.PASSWORD
											, MEMBER.IS_ADMIN
											, MEMBER.PHONE_NUMBER
											, MEMBER.MAIN_IMAGE_NAME
											, MEMBER.MAIN_IMAGE_LOCATION
											, MEMBER.NAME
											, MEMBER.JOIN_DT
											, MEMBER.RECENT_ACCESS_DT
									FROM    MEMBER
											, REPORTED_PLACE
									WHERE	MEMBER.EMAIL = REPORTED_PLACE.EMAIL
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?	     		
     	</getReportedMembers>
     	<getMemberDetailByEmail>
     		SELECT	*
     		FROM	MEMBER
     		WHERE	EMAIL = ?
     	</getMemberDetailByEmail>
     	<isAdmin>
     		SELECT	COUNT(NAME) AS COUNT
     		FROM	MEMBER
     		WHERE	EMAIL = ?
     		AND		IS_ADMIN = 1     	
     	</isAdmin>
     	<getMemberByEmailAndPasswordForAdmin>
     		SELECT	*
     		FROM	MEMBER
     		WHERE	EMAIL = ?
     		AND		PASSWORD = ?
     		AND		IS_ADMIN = 1     	
     	</getMemberByEmailAndPasswordForAdmin>
	</member>
	
	<pack>
		<getPackListByEmail>
			SELECT  *
			FROM    PACK
			WHERE   EMAIL = ?
		</getPackListByEmail>
		<getPackDataByPackId>
			SELECT  *
			FROM    PACK
			WHERE   PACK_ID = ?
		</getPackDataByPackId>
		<addPack>
			INSERT INTO PACK (
			                            PACK_ID
			                            , SHARE_IMAGE_NAME
			                            , PACK_TITLE
			                            , EMAIL
			                            , SHARE_IMAGE_LOCATION
			                        ) 
				VALUES              ( PACK_ID_SEQ.NEXTVAL
			                          ,0
			                          ,?
			                          ,?
			                          ,0
			                          )
		</addPack>
		<getLatesPackId>
			SELECT	PACK_ID_SEQ.CURRVAL
			FROM	PACK
		</getLatesPackId>
		<uploadPackImgFile>
			UPDATE PACK
			SET    SHARE_IMAGE_NAME     = ?
			       , SHARE_IMAGE_LOCATION = ?
			WHERE  PACK_ID              = ?
		</uploadPackImgFile>
		<deletePack>
			DELETE	
			FROM	PACK
			WHERE	PACK_ID=?
		</deletePack>
		<getPlaceListByPackId>
			SELECT  PLACE.*
			FROM    PACK_PLACE
					, PLACE
			WHERE   PACK_PLACE.PLACE_ID = PLACE.PLACE_ID
			AND		PACK_PLACE.PACK_ID = ?
		</getPlaceListByPackId>
		<getAllPackage>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PACK
									ORDER 	BY PACK_ID
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllPackage>
		<getPackListCount>
			SELECT 	COUNT(PACK_ID)
			FROM    PACK		
		</getPackListCount>
	</pack>
	
	<packLike>
	</packLike>
	
	<packReply>
	</packReply>
	
	<place>
		<placeInfoRecommendedList>
		</placeInfoRecommendedList>
		<insertPlaceInfo>
			INSERT	INTO	PLACE	(
											PLACE_ID
											, PLACE_NAME
											, ADDRESS
											, LATITUDE
											, LONGITUDE
											, DESCRIPTION
										)
			VALUES						(
											PLACE_ID_SEQ.NEXTVAL
											, ?
											, ?
											, ?
											, ?
											, ?
										)
		</insertPlaceInfo>
		<getReturnPlaceId>
			SELECT	PLACE_ID_SEQ.CURRVAL
			FROM	DUAL
		</getReturnPlaceId>
		<getAllOriginPlaceCount>
			SELECT	COUNT(PLACE_ID)
			FROM	PLACE
			WHERE	IS_NEW_PLACE = ?		
		</getAllOriginPlaceCount>
		<getAllOriginPlaces>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = ?
									ORDER   BY PLACE_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlaces>
		<getAllOriginPlacesSearchedByPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = ?
									AND		PLACE_NAME = ?
									ORDER   BY PLACE_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesSearchedByPlaceName>
		<getAllOriginPlacesSearchedByEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = ?
									AND		EMAIL = ?
									ORDER   BY PLACE_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesSearchedByEmail>
		<getAllOriginPlacesSearchedByCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = ?
									AND		COUNTRY_ID = ?
									ORDER   BY PLACE_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesSearchedByCountryId>
		<getAllOriginPlacesOrderbyPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = ?
									ORDER   BY PLACE_NAME ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?		
		</getAllOriginPlacesOrderbyPlaceName>
		<getAllOriginPlacesOrderbyPlaceNameSearchedByPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = ?
									AND		PLACE_NAME = ?
									ORDER   BY PLACE_NAME ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyPlaceNameSearchedByPlaceName>
		<getAllOriginPlacesOrderbyEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE != 1
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?		
		</getAllOriginPlacesOrderbyEmail>
		<getAllOriginPlacesOrderbyPlaceNameSearchedByEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE != 1
									AND		EMAIL = ?
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?		
		
		</getAllOriginPlacesOrderbyPlaceNameSearchedByEmail>
		<getAllOriginPlacesOrderbyCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE != 1
									ORDER   BY COUNTRY_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?		
		</getAllOriginPlacesOrderbyCountryId>
		<getAllOriginPlacesOrderbyPlaceNameSearchedByCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE != 1
									AND		COUNTRY_ID = ? 
									ORDER   BY COUNTRY_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?		
		
		</getAllOriginPlacesOrderbyPlaceNameSearchedByCountryId>
		<getAllOriginPlacesOrderbyLikeCount>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE != 1
									ORDER   BY LIKE_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyLikeCount>
		<getAllOriginPlacesOrderbyViewCount>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE != 1
									ORDER   BY VIEW_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?				
		</getAllOriginPlacesOrderbyViewCount>
		<getAllNewPlaceCount>
			SELECT	COUNT(PLACE_ID)
			FROM	PLACE
			WHERE	IS_NEW_PLACE = 1			
		</getAllNewPlaceCount>
		<getAllNewPlaces>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									ORDER   BY PLACE_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllNewPlaces>
		<getAllNewPlacesOrderbyPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									ORDER   BY PLACE_NAME ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllNewPlacesOrderbyPlaceName>
		<getAllNewPlacesOrderbyEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllNewPlacesOrderbyEmail>
		<getAllOriginPlacesOrderbyEmailSearchedByPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		PLACE_NAME = ?
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		PLACE_NAME = ?
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyEmailSearchedByPlaceName>
		<getAllOriginPlacesOrderbyEmailSearchedByEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		EMAIL = ?
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyEmailSearchedByEmail>
		<getAllOriginPlacesOrderbyEmailSearchedByCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		COUNTRY_ID = ?
									ORDER   BY EMAIL ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyEmailSearchedByCountryId>
		<getAllNewPlacesOrderbyCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									ORDER   BY COUNTRY_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllNewPlacesOrderbyCountryId>
		<getAllOriginPlacesOrderbyCountryIdSearchedByPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		PLACE_NAME = ?
									ORDER   BY COUNTRY_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?					
		</getAllOriginPlacesOrderbyCountryIdSearchedByPlaceName>
		<getAllOriginPlacesOrderbyCountryIdSearchedByEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		EMAIL = ?
									ORDER   BY COUNTRY_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyCountryIdSearchedByEmail>
		<getAllOriginPlacesOrderbyCountryIdSearchedByCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		COUNTRY_ID = ?
									ORDER   BY COUNTRY_ID ASC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		
		</getAllOriginPlacesOrderbyCountryIdSearchedByCountryId>
		<getAllNewPlacesOrderbyLikeCount>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									ORDER   BY LIKE_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllNewPlacesOrderbyLikeCount>
		<getAllOriginPlacesOrderbyLikeCountSearchedByPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		PLACE_ID = ?
									ORDER   BY LIKE_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyLikeCountSearchedByPlaceName>
		<getAllOriginPlacesOrderbyLikeCountSearchedByEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		EMAIL = ?
									ORDER   BY LIKE_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyLikeCountSearchedByEmail>
		<getAllOriginPlacesOrderbyLikeCountSearchedByCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		COUNTRY_ID = ?
									ORDER   BY LIKE_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyLikeCountSearchedByCountryId>
		<getAllNewPlacesOrderbyViewCount>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									ORDER   BY VIEW_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllNewPlacesOrderbyViewCount>
		<getAllOriginPlacesOrderbyViewCountSearchedByPlaceName>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		PLACE_ID = ?
									ORDER   BY VIEW_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyViewCountSearchedByPlaceName>
		<getAllOriginPlacesOrderbyViewCountSearchedByEmail>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		EMAIL = ?
									ORDER   BY VIEW_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyViewCountSearchedByEmail>
		<getAllOriginPlacesOrderbyViewCountSearchedByCountryId>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    PLACE
									WHERE	IS_NEW_PLACE = 1
									AND		COUNTRY_ID = ?
									ORDER   BY VIEW_COUNT DESC
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllOriginPlacesOrderbyViewCountSearchedByCountryId>
		<getPlaceDetailByPlaceId>
			SELECT	*
			FROM	PLACE
			WHERE	PLACE_ID = ?
		</getPlaceDetailByPlaceId>
		<getAllReportedPlaceCount>
			SELECT	COUNT(REPORT_ID)
			FROM	REPORTED_PLACE			
		</getAllReportedPlaceCount>
		<getAllReportedPlaces>
			SELECT	* 
			FROM	(
						SELECT	ROWNUM AS RNUM
								, A.*
						FROM	(
									SELECT  *
									FROM    REPORTED_PLACE
								) A 
						WHERE	ROWNUM &lt;= ?	
					)	
			WHERE	RNUM >= ?			
		</getAllReportedPlaces>
		<deletePlaceByPlaceId>
			DELETE	
			FROM	PLACE
			WHERE	PLACE_ID = ?					
		</deletePlaceByPlaceId>
		<goOriginPlaceByPlaceId>
     		UPDATE	PLACE
     		SET		IS_NEW_PLACE = 0
     		WHERE	PLACE_ID = ?   		
		</goOriginPlaceByPlaceId>
		<goNewPlaceByPlaceId>
     		UPDATE	PLACE
     		SET		IS_NEW_PLACE = 1
     		WHERE	PLACE_ID = ?  		
		</goNewPlaceByPlaceId>
		<updatePlaceName>
     		UPDATE	PLACE
     		SET		PLACE_NAME = ?
     		WHERE	PLACE_ID = ?  		
		</updatePlaceName>
		<updateDescription>
     		UPDATE	PLACE
     		SET		DESCRIPTION = ?
     		WHERE	PLACE_ID = ? 		
		</updateDescription>
	</place>
	
	<placeLike>
	</placeLike>
	
	<placeReply>
	</placeReply>
	
	<qna>
	</qna>
	
	<rent>
	</rent>
	
	<reportedPlace>
	</reportedPlace>
	
	<reserve>
	</reserve>
	
	<selectedCountry>
	</selectedCountry>
	
	<standard>
	</standard>
	
	<stay>
	</stay>
	
	<transport>
	</transport>
	
</query>

