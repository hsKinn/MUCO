<?xml version="1.0" encoding="UTF-8"?>
<query>
	<member>
		<getMemberByIdAndPassword>
				SELECT 	MEMBER_ID
						, NICK_NAME
						, PASSWORD
						, EMAIL
				FROM 	MEMBERS
				WHERE	MEMBER_ID = ?
				AND		PASSWORD = ?
		</getMemberByIdAndPassword>
		<insertNewMember>
				INSERT	INTO	MEMBERS	( 
											MEMBER_ID
											, NICK_NAME
											, PASSWORD
											, EMAIL 
										) 
				VALUES 					( 
											MEMBER_ID_SEQ.NEXTVAL
											, ? 
											, ? 
											, ? 
										)
		</insertNewMember> 
	</member>
	<article>
		<getAllArticleCount>
				SELECT  COUNT(A.ARTICLE_ID)
				FROM	ARTICLES A
					 	, MEMBERS M
				WHERE	A.MEMBER_ID = M.MEMBER_ID
		</getAllArticleCount>
		<allArticle>
				SELECT	*
				FROM	(SELECT	ROWNUM AS RNUM
									, A.*
							FROM	(
										SELECT  A.ARTICLE_ID
                                                , TITLE
												, NICK_NAME
                                                , HITS
                                                , RECOMMENDS
												, COUNT(FILE_ID) FILE_COUNT
										FROM	ARTICLES A
											 	, MEMBERS M
											 	, FILES F
										WHERE	A.MEMBER_ID = M.MEMBER_ID
										AND     A.ARTICLE_ID = F.ARTICLE_ID(+)
										GROUP   BY  A.ARTICLE_ID
													, TITLE
													, NICK_NAME
													, HITS
													, RECOMMENDS
										ORDER   BY  A.ARTICLE_ID DESC
									) A
							WHERE	ROWNUM &lt;= ?
						)
				WHERE	RNUM &gt;= ?
							
<!-- 			ROWNUM <=3이	
				&lt;= 3를 사용하기 싫다면
				<![CDATA[<=]]>3 형식으로 사용하면 된다. -->
				
				

		</allArticle>
	</article>
	<detail>
		<getDetail>
				SELECT  A.*
	       				,M.NICK_NAME
				FROM    ARTICLES A
				        ,MEMBERS M
				WHERE   A.MEMBER_ID = M.MEMBER_ID
				AND     A.ARTICLE_ID = ?
		</getDetail>
		<getHit>
			UPDATE  ARTICLES
			SET     HITS = (HITS+1)
			WHERE   ARTICLE_ID = ?
			AND		MEMBER_ID != ?
		</getHit>
		<getRecommend>
			UPDATE	ARTICLES
			SET		RECOMMENDS = (RECOMMENDS+1)
			WHERE	ARTICLE_ID = ?
		</getRecommend>
		<getDelete>
			DELETE
			FROM    ARTICLES 
			WHERE   ARTICLE_ID = ?
		</getDelete>
	</detail>
	<write>
		<getWrite>
			INSERT INTO ARTICLES (
                        ARTICLE_ID
                        , MEMBER_ID
                        , TITLE
                        , DESCRIPT
                     ) 
			VALUES ( 
			            ARTICLE_ID_SEQ.NEXTVAL
			            , ?
			            , ?
			            , ?
			       )
		</getWrite>
		<getReturnArticleId>
			SELECT	ARTICLE_ID_SEQ.CURRVAL
			FROM	DUAL
		</getReturnArticleId>
		<updateArticleOnlyTitle>
			UPDATE	ARTICLES
			SET		TITLE = ?
			WHERE	ARTICLE_ID = ?
		</updateArticleOnlyTitle>
		<updateArticleOnlyDescript>
			UPDATE	ARTICLES
			SET		DESCRIPT = ?
			WHERE	ARTICLE_ID = ?
		</updateArticleOnlyDescript>
		<updateArticle>
			UPDATE	ARTICLES
			SET		TITLE = ?
					, DESCRIPT = ?
			WHERE	ARTICLE_ID = ?
		</updateArticle>
	</write>
		<file>
		<insertFile>
			INSERT	INTO	FILES	( 
										FILE_ID
										, ARTICLE_ID
										, FILE_NAME
										, FILE_LOCATION
									)
			VALUES 					(
										FILE_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
									)
		</insertFile>
		<getFileListByArticleId>
			SELECT	FILE_ID
					, FILE_NAME
					, FILE_LOCATION
			FROM	FILES
			WHERE	ARTICLE_ID = ?
		</getFileListByArticleId>
	</file>
	<reply>
		<insertReply>
			INSERT	INTO	REPLIES	(
										REPLY_ID
										, ARTICLE_ID
										, MEMBER_ID
										, DESCRIPTION
										, GROUP_ID
										, PARENT_REPLY_ID
										, DEPTH
										, ORDER_NO
									) 
			VALUES					(
										REPLY_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
										, REPLY_ID_SEQ.CURRVAL
										, 0
										, 0
										, 0
									)
		</insertReply>
		<insertReReply>
			INSERT	INTO	REPLIES	(
										REPLY_ID
										, ARTICLE_ID
										, MEMBER_ID
										, DESCRIPTION
										, GROUP_ID
										, PARENT_REPLY_ID
										, DEPTH
										, ORDER_NO
									) 
			VALUES					(
										REPLY_ID_SEQ.NEXTVAL
										, ?
										, ?
										, ?
										, ?
										, ?
										, ?
										, ?
									)
		</insertReReply>
		<getReplyListByArticleId>
            SELECT	REPLY_ID
					, ARTICLE_ID
					, M.MEMBER_ID
					, NICK_NAME
					, DESCRIPTION
					, GROUP_ID
					, PARENT_REPLY_ID
					, DEPTH
					, ORDER_NO
			FROM	REPLIES R
					, MEMBERS M
			WHERE	R.MEMBER_ID = M.MEMBER_ID
			AND		R.ARTICLE_ID = ?
			ORDER	BY GROUP_ID ASC
					, ORDER_NO ASC
		</getReplyListByArticleId>
		<selectCountParentReplyId>
			SELECT	COUNT(REPLY_ID)
			FROM	REPLIES
			WHERE	PARENT_REPLY_ID = ?
		</selectCountParentReplyId>
		<selectMaxOrderNoByParentReplyId>
			SELECT	MAX(ORDER_NO)
						FROM	REPLIES
						START	WITH REPLY_ID = ?
						CONNECT	BY PRIOR REPLY_ID = PARENT_REPLY_ID
						ORDER	BY	ORDER_NO	DESC	
		</selectMaxOrderNoByParentReplyId>
		<selectLatestOrderNoByParentReplyId>
			SELECT	ORDER_NO
			FROM	REPLIES
			WHERE	REPLY_ID = ?
		</selectLatestOrderNoByParentReplyId>
		<updateOrderNoByGroupId>
			UPDATE	REPLIES
			SET		ORDER_NO = ORDER_NO + 1
			WHERE	ORDER_NO >= ?
			AND		GROUP_ID = ?
		</updateOrderNoByGroupId>
	</reply>
	
	<operationHistory>
		<insertHistory>
			INSERT INTO OPER_HIST (
											   HISTORY_ID
											   , IP
											   , MEMBER_ID
											   , CRT_DT
											   , URL
											   , ACTION_CODE
											   , DESCRIPTION
											   , ETC
										   ) 
			VALUES 							( 
												HISTORY_ID_SEQ.NEXTVAL
												, ?
												, ?
												, SYSDATE
												, ?
												, ?
												, ?
												, ?
											)
		</insertHistory>
	</operationHistory>
	<favorite>
		<insertFavorite>
			INSERT INTO FAVO    (
			                        FAVO_ID
			                        , ARTICLE_ID
			                        , MEMBER_ID
			                        , CRT_DT
            			        ) 
			VALUES              (
			                        FAVO_ID_SEQ.NEXTVAL
			                        , ?
			                        , ?
			                        , SYSDATE
            			        )
		</insertFavorite>
		<deleteFavorite>
			DELETE
			FROM    FAVO
			WHERE   ARTICLE_ID = ?
			AND     MEMBER_ID = ?
		</deleteFavorite>
		<selectFavoriteCount>
			SELECT	COUNT(FAVO_ID)
			FROM	FAVO
			WHERE   ARTICLE_ID = ?
			AND     MEMBER_ID = ?
		</selectFavoriteCount>
	</favorite>
</query>